// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`express-schema-server reports all issues 1`] = `
Array [
  Object {
    "code": "MIN_LENGTH",
    "description": "Account password",
    "message": "String is too short (0 chars), minimum 6",
    "params": Array [
      0,
      6,
    ],
    "path": "#/password",
    "schemaId": undefined,
    "title": "Password",
    Symbol(z-schema/schema): Object {
      "__$validated": true,
      "description": "Account password",
      "format": "valid-password",
      "maxLength": 256,
      "minLength": 6,
      "title": "Password",
      "type": "string",
    },
    Symbol(z-schema/json): Object {
      "email": "",
      "password": "",
    },
  },
  Object {
    "code": "MIN_LENGTH",
    "description": "Email address",
    "message": "String is too short (0 chars), minimum 3",
    "params": Array [
      0,
      3,
    ],
    "path": "#/email",
    "schemaId": undefined,
    "title": "Email",
    Symbol(z-schema/schema): Object {
      "__$validated": true,
      "description": "Email address",
      "format": "email",
      "maxLength": 256,
      "minLength": 3,
      "title": "Email",
      "type": "string",
    },
    Symbol(z-schema/json): Object {
      "email": "",
      "password": "",
    },
  },
  Object {
    "code": "INVALID_FORMAT",
    "description": "Email address",
    "message": "Object didn't pass validation for format email: ",
    "params": Array [
      "email",
      "",
    ],
    "path": "#/email",
    "schemaId": undefined,
    "title": "Email",
    Symbol(z-schema/schema): Object {
      "__$validated": true,
      "description": "Email address",
      "format": "email",
      "maxLength": 256,
      "minLength": 3,
      "title": "Email",
      "type": "string",
    },
    Symbol(z-schema/json): Object {
      "email": "",
      "password": "",
    },
  },
  Object {
    "code": "INVALID_FORMAT",
    "description": "Account password",
    "message": "Object didn't pass validation for format valid-password: ",
    "params": Array [
      "valid-password",
      "",
    ],
    "path": "#/",
    "schemaId": null,
    "title": "Password",
    Symbol(z-schema/schema): Object {
      "__$validated": true,
      "description": "Account password",
      "format": "valid-password",
      "maxLength": 256,
      "minLength": 6,
      "title": "Password",
      "type": "string",
    },
    Symbol(z-schema/json): Object {
      "email": "",
      "password": "",
    },
  },
]
`;

exports[`express-schema-server reports built in validator along with custom custom validator 1`] = `
Array [
  Object {
    "code": "MIN_LENGTH",
    "description": "Account password",
    "message": "String is too short (3 chars), minimum 6",
    "params": Array [
      3,
      6,
    ],
    "path": "#/password",
    "schemaId": undefined,
    "title": "Password",
    Symbol(z-schema/schema): Object {
      "__$validated": true,
      "description": "Account password",
      "format": "valid-password",
      "maxLength": 256,
      "minLength": 6,
      "title": "Password",
      "type": "string",
    },
    Symbol(z-schema/json): Object {
      "email": "yyy",
      "password": "xxx",
    },
  },
  Object {
    "code": "INVALID_FORMAT",
    "description": "Email address",
    "message": "Object didn't pass validation for format email: yyy",
    "params": Array [
      "email",
      "yyy",
    ],
    "path": "#/email",
    "schemaId": undefined,
    "title": "Email",
    Symbol(z-schema/schema): Object {
      "__$validated": true,
      "description": "Email address",
      "format": "email",
      "maxLength": 256,
      "minLength": 3,
      "title": "Email",
      "type": "string",
    },
    Symbol(z-schema/json): Object {
      "email": "yyy",
      "password": "xxx",
    },
  },
  Object {
    "code": "INVALID_FORMAT",
    "description": "Account password",
    "message": "Object didn't pass validation for format valid-password: xxx",
    "params": Array [
      "valid-password",
      "xxx",
    ],
    "path": "#/",
    "schemaId": null,
    "title": "Password",
    Symbol(z-schema/schema): Object {
      "__$validated": true,
      "description": "Account password",
      "format": "valid-password",
      "maxLength": 256,
      "minLength": 6,
      "title": "Password",
      "type": "string",
    },
    Symbol(z-schema/json): Object {
      "email": "yyy",
      "password": "xxx",
    },
  },
]
`;

exports[`express-schema-server reports invalid custom validator 1`] = `
Array [
  Object {
    "code": "INVALID_FORMAT",
    "description": "Account password",
    "message": "Object didn't pass validation for format valid-password: xxxxxx",
    "params": Array [
      "valid-password",
      "xxxxxx",
    ],
    "path": "#/",
    "schemaId": null,
    "title": "Password",
    Symbol(z-schema/schema): Object {
      "__$validated": true,
      "description": "Account password",
      "format": "valid-password",
      "maxLength": 256,
      "minLength": 6,
      "title": "Password",
      "type": "string",
    },
    Symbol(z-schema/json): Object {
      "email": "foo@bar.com",
      "password": "xxxxxx",
    },
  },
]
`;

exports[`express-schema-server reports missing fields 1`] = `
Array [
  Object {
    "code": "OBJECT_MISSING_REQUIRED_PROPERTY",
    "description": "Authenticate with username and password",
    "message": "Missing required property: password",
    "params": Array [
      "password",
    ],
    "path": "#/",
    "schemaId": undefined,
    "title": "Login",
    Symbol(z-schema/schema): Object {
      "__$compiled": true,
      "__$validated": true,
      "description": "Authenticate with username and password",
      "properties": Object {
        "email": Object {
          "__$validated": true,
          "description": "Email address",
          "format": "email",
          "maxLength": 256,
          "minLength": 3,
          "title": "Email",
          "type": "string",
        },
        "password": Object {
          "__$validated": true,
          "description": "Account password",
          "format": "valid-password",
          "maxLength": 256,
          "minLength": 6,
          "title": "Password",
          "type": "string",
        },
      },
      "required": Array [
        "email",
        "password",
      ],
      "title": "Login",
      "type": "object",
    },
    Symbol(z-schema/json): Object {
      "email": "foo@bar.com",
    },
  },
]
`;
